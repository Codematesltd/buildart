from flask import Blueprint, render_template, request, flash, redirect, url_for, current_app
from supabase import create_client, Client
from dotenv import load_dotenv
import os
from datetime import datetime
from routes.admin import supabase
from flask_mail import Mail, Message

load_dotenv()

main_bp = Blueprint('main', __name__)

mail = Mail()

@main_bp.route('/')
def index():
    return render_template('index.html')

@main_bp.route('/about')
def about():
    return render_template('about.html')

@main_bp.route('/projects')
def projects():
    supabase = current_app.config['supabase']
    try:
        # Fetch projects from Supabase
        response = supabase.table('projects').select('*').execute()
        projects = response.data if response.data else []

        # Transform image URLs for each project
        for project in projects:
            project['image_urls'] = []
            if project.get('images'):
                # Convert string to list if needed
                images = project['images']
                if isinstance(images, str):
                    import json
                    images = json.loads(images)
                    
                # Get full URLs for each image
                project['image_urls'] = [
                    supabase.storage.from_('project-images').get_public_url(img)
                    for img in images
                ]

        return render_template('projects.html', supabase_projects=projects)
    except Exception as e:
        print(f"Error fetching projects: {str(e)}")
        return render_template('projects.html', supabase_projects=[])

@main_bp.route('/awards')
def awards():
    return render_template('awards.html')

@main_bp.route('/careers', methods=['GET', 'POST'])
def careers():
    if request.method == 'POST':
        try:
            # Get form data
            data = {
                'name': request.form.get('name'),
                'email': request.form.get('email'),
                'phone': request.form.get('phone'),
                'position': request.form.get('position'),
                'message': request.form.get('message'),
                'status': 'pending'
            }
            
            # Save to Supabase
            supabase = current_app.config['supabase']
            response = supabase.table('careers').insert(data).execute()

            # Send email notification
            msg = Message(
                'New Career Application - Buildaart',
                sender=current_app.config['MAIL_DEFAULT_SENDER'],
                recipients=['info@buildaart.com']
            )
            
            msg.html = f"""
            <h2>New Career Application</h2>
            <p><strong>Name:</strong> {data['name']}</p>
            <p><strong>Email:</strong> {data['email']}</p>
            <p><strong>Phone:</strong> {data['phone']}</p>
            <p><strong>Position:</strong> {data['position']}</p>
            <p><strong>Cover Letter:</strong></p>
            <p>{data['message']}</p>
            """
            
            mail.send(msg)
            
            flash('Your application has been submitted successfully!', 'success')
            return redirect(url_for('main.careers'))
            
        except Exception as e:
            print(f"Error submitting application: {str(e)}")
            flash('There was an error submitting your application. Please try again.', 'error')
            return redirect(url_for('main.careers'))
    
    return render_template('careers.html')

@main_bp.route('/contact', methods=['GET', 'POST'])
def contact():
    if request.method == 'POST':
        try:
            # Get form data
            name = request.form.get('name')
            email = request.form.get('email')
            message = request.form.get('message')
            
            # Validate required fields
            if not all([name, email, message]):
                flash('All fields are required', 'error')
                return redirect(url_for('main.contact'))
            
            # Insert into Supabase
            supabase = current_app.config['supabase']
            data = {
                'name': name,
                'email': email,
                'message': message
                # created_at will be auto-generated by Supabase
            }
            
            response = supabase.table('general_inquiries').insert(data).execute()
            
            if response.data:
                flash('Thank you for your message! We will get back to you soon.', 'success')
            else:
                flash('There was an error sending your message. Please try again.', 'error')
                
            return redirect(url_for('main.contact'))
            
        except Exception as e:
            print(f"Error saving contact form: {str(e)}")
            flash('An unexpected error occurred. Please try again later.', 'error')
            return redirect(url_for('main.contact'))
    
    return render_template('contact.html')
